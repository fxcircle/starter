<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.richesup</groupId>
    <artifactId>starter</artifactId>
    <version>1.0.0-RELEASE</version>


    <!--自定义信息-->
    <properties>
        <springboot.version>2.1.5.RELEASE</springboot.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.SR2</spring-cloud.version>
        <lombok.version>1.18.6</lombok.version>
        <quartz-version>2.3.0</quartz-version>
        <mybatis.generator.version>1.3.7</mybatis.generator.version>
        <mysql.version>5.1.47</mysql.version>
        <druid.version>1.1.14</druid.version>
        <shiro.version>1.10.0</shiro.version>
        <jedis.version>3.0.1</jedis.version>
        <fastjson.version>1.2.60</fastjson.version>
        <junit.version>4.12</junit.version>
        <logging.log4j.version>2.11.2</logging.log4j.version>
        <swagger.version>2.9.2</swagger.version>
        <zipkin-version>2.11.8</zipkin-version>
        <apollo-version>1.3.0</apollo-version>
        <prometheus-version>1.1.3</prometheus-version>


    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.5.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <!--仓库位置-->
        <distributionManagement>
            <repository>
                <id>releases</id>
                <name>Nexus Release Repository</name>
                <url>http://39.105.19.200:8081/repository/maven-releases/</url>
            </repository>
            <snapshotRepository>
                <id>snapshots</id>
                <name>Nexus Snapshot Repository</name>
                <url>http://39.105.19.200:8081/repository/maven-snapshots/</url>
            </snapshotRepository>
        </distributionManagement>
    <!--<distributionManagement>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://10.66.12.181:8081/nexus/content/repositories/dev-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>-->

    <dependencyManagement>
        <dependencies>

            <!--springCloud相关依赖-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--mybatis分页插件-->
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>2.1.2</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>1.2.10</version>
            </dependency>

            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>1.3.2</version>
            </dependency>

            <!--lombok-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--定时任务quartz-->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz-version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz-jobs</artifactId>
                <version>${quartz-version}</version>
            </dependency>

            <!--mybatis代码生成工具-->
            <!--            <dependency>-->
            <!--                <groupId>org.mybatis.generator</groupId>-->
            <!--                <artifactId>mybatis-generator-core</artifactId>-->
            <!--                <version>${mybatis.generator.version}</version>-->
            <!--            </dependency>-->

            <!--mysql驱动-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!--德鲁伊驱动-->
            <!--            <dependency>-->
            <!--                <groupId>com.alibaba</groupId>-->
            <!--                <artifactId>druid</artifactId>-->
            <!--                <version>${druid.version}</version>-->
            <!--            </dependency>-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!--权限控制-->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>

            <!--redis客户端-->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>

            <!--json转换-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!--junit-->
            <!--            <dependency>-->
            <!--                <groupId>junit</groupId>-->
            <!--                <artifactId>junit</artifactId>-->
            <!--                <version>${junit.version}</version>-->
            <!--                <scope>test</scope>-->
            <!--            </dependency>-->

            <!--单元测试-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${springboot.version}</version>
                <scope>test</scope>
            </dependency>

            <!--springbatch相关,在springboot中定义-->

            <!--日志-->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${logging.log4j.version}</version>
            </dependency>

            <!-- swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <!-- zipkin -->
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-server</artifactId>
                <version>${zipkin-version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-autoconfigure-ui</artifactId>
                <version>${zipkin-version}</version>
            </dependency>

            <!-- apollo-core -->
            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-core</artifactId>
                <version>${apollo-version}</version>
            </dependency>

            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-client</artifactId>
                <version>${apollo-version}</version>
            </dependency>

            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${prometheus-version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <build>
        <finalName>${project.artifactId}-1.0.0</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
                <!-- 默认所有项目跳过测试 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

    <!--            <distributionManagement>-->
    <!--                <repository>-->
    <!--                    <id>dev-snapshots</id>-->
    <!--                    <name>dev-snapshots</name>-->
    <!--                    <url>http://192.168.11.177:8081/nexus/content/repositories/dev-snapshots</url>-->
    <!--                </repository>-->
    <!--            </distributionManagement>-->

    <!-- 全局属性配置 -->
<!--    <profiles>-->
<!--        &lt;!&ndash; 本地环境 &ndash;&gt;-->
<!--        <profile>-->
<!--            <id>localhost</id>-->
<!--            <properties>-->
<!--                <env>localhost</env>-->
<!--                <registration.center.url>http://localhost:16033/eureka/</registration.center.url>-->
<!--                <node1></node1>-->
<!--                <node2></node2>-->
<!--                <node3></node3>-->
<!--                <zipkin.server.url>http://localhost:16034</zipkin.server.url>-->
<!--                <log_path>D:/data/fintech/logs</log_path>-->
<!--            </properties>-->
<!--            &lt;!&ndash; 设置默认环境 &ndash;&gt;-->
<!--            <activation>-->
<!--                <activeByDefault>true</activeByDefault>-->
<!--            </activation>-->
<!--        </profile>-->
<!--        &lt;!&ndash; 开发环境 &ndash;&gt;-->
<!--        <profile>-->
<!--            <id>dev</id>-->
<!--            <properties>-->
<!--                <env>dev</env>-->
<!--                <registration.center.url>http://localhost:16033/eureka/</registration.center.url>-->
<!--                <node1></node1>-->
<!--                <node2></node2>-->
<!--                <node3></node3>-->
<!--                <zipkin.server.url>http://localhost:16034</zipkin.server.url>-->
<!--                <log_path>D:/data/fintech/logs</log_path>-->
<!--            </properties>-->
<!--            &lt;!&ndash; 设置默认环境 &ndash;&gt;-->
<!--            &lt;!&ndash;            <activation>&ndash;&gt;-->
<!--            &lt;!&ndash;                <activeByDefault>true</activeByDefault>&ndash;&gt;-->
<!--            &lt;!&ndash;            </activation>&ndash;&gt;-->
<!--        </profile>-->
<!--    </profiles>-->


</project>